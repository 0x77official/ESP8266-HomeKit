Copyright 2016 HomeACcessoryKid - HacK - homeaccessorykid@gmail.com

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================


When applying this software on the ESP8266/RTOS SDK it is assumed that this environment already works as recommended.

the directories from hkc should be duplicated in include and third_party respectively
The content can be hardlinked to serve github
ESP8266-HomeKit/hkc/include/hkc:
   7828 Dec 18 16:39 hkc.h
    357 Dec 18 15:51 user_settings.h
ESP8266-HomeKit/hkc/third_party/hkc:
   1572 Dec 18 16:19 Makefile
   5349 Dec 18 16:20 hk.h
  88030 Dec 22 22:28 hkc.c
   2445 Dec 18 16:53 todo.txt

Our software will need more space than originally foreseen in RTOS1.5.0 which was to start irom at 0x20000.

It is needed to change the ld/eagle.app.v6.ld file:
diff ld/eagle.app.v6.ld ld/eagle.app.v6.ld.0
29,30c29
< /*irom0_0_seg :                       	org = 0x40220000, len = 0x5C000 */
<   irom0_0_seg :                       	org = 0x40214000, len = 0x67000
---
>   irom0_0_seg :                       	org = 0x40220000, len = 0x5C000

for convenience also change the master Makefile:
diff ESP8266/source/ESP8266_RTOS_SDK-master-v1.5.0/Makefile Makefile 
271c271
< 	@echo "eagle.irom0text.bin---->0x20000"
---
> 	@echo "eagle.irom0text.bin---->0x14000"



Included is a subsection of the wolfssl3.9.8 distribution for convenience.
Please download your own copy and verify the equality of the files (*.0 is original)
Note that additional src files should be removed to prevent excess irom size.
$ ls -l ESP8266-HomeKit/wolfcrypt/src
Mar  5  2016 Makefile
Aug  6 10:11 chacha.c
Aug  6 10:11 chacha20_poly1305.c
Aug  6 10:11 curve25519.c
Aug  6 10:11 ed25519.c
Aug  6 10:11 fe_operations.c
Sep 25 11:09 ge_operations.c
Aug  6 10:11 ge_operations.c.0
Aug  6 10:11 hash.c
Aug  6 10:11 hmac.c
Aug  6 10:11 integer.c
Sep 25 01:38 misc.c
Aug  6 10:11 misc.c.0
Aug  6 10:11 poly1305.c
Aug  6 10:11 random.c
Aug  6 10:11 sha256.c
Aug  6 10:11 sha512.c
Aug  6 10:11 srp.c
$ ls -l include/wolfssl/
Aug  6 10:11 ssl.h
Aug  6 10:11 version.h
Sep 25 11:26 wolfcrypt
$ ls -l include/wolfssl/wolfcrypt/
Aug  6 10:11 arc4.h
Aug  6 10:11 asn.h
Aug  6 10:11 asn_public.h
Aug  6 10:11 chacha.h
Aug  6 10:11 chacha20_poly1305.h
Aug  6 10:11 curve25519.h
Aug  6 10:11 ed25519.h
Aug  6 10:11 error-crypt.h
Aug  6 10:11 fe_operations.h
Aug  6 10:11 ge_operations.h
Aug  6 10:11 hash.h
Aug  6 10:11 hmac.h
Aug  6 10:11 integer.h
Aug  6 10:11 logging.h
Aug  6 10:11 memory.h
Aug  6 10:11 misc.h
Aug  6 10:11 mpi_class.h
Aug  6 10:11 mpi_superclass.h
Aug  6 10:11 poly1305.h
Aug  6 10:11 random.h
Aug  6 10:11 rsa.h
Sep 25 00:09 settings.h
Aug  6 10:11 settings.h.0
Aug  6 10:11 sha.h
Aug  6 10:11 sha256.h
Aug  6 10:11 sha512.h
Aug  6 10:11 srp.h
Aug  6 10:11 types.h
Aug  6 10:11 visibility.h
Aug  6 10:11 wc_port.h

$ diff ESP8266-HomeKit/wolfcrypt/src/ge_operations.c ESP8266-HomeKit/wolfcrypt/src/ge_operations.c.0 
770c770
< static ge_precomp ICACHE_RODATA_ATTR base[32][8] = {
---
> static ge_precomp base[32][8] = {
2225c2225
< static ge_precomp ICACHE_RODATA_ATTR Bi[8] = {
---
> static ge_precomp Bi[8] = {

$ diff ESP8266-HomeKit/wolfcrypt/src/misc.c ESP8266-HomeKit/wolfcrypt/src/misc.c.0 
48,50c48,50
< // #if !defined(WOLFSSL_MISC_INCLUDED) && !defined(NO_INLINE)
< //     #error misc.c does not need to be compiled when not defined NO_INLINE
< // #endif
---
> #if !defined(WOLFSSL_MISC_INCLUDED) && !defined(NO_INLINE)
>     #error misc.c does not need to be compiled when not defined NO_INLINE
> #endif


$ diff include/wolfssl/wolfcrypt/settings.h include/wolfssl/wolfcrypt/settings.h.0 
34,35d33
< #define WOLFSSL_USER_SETTINGS
< 

=========================
Compiling:
cd ESP8266-HomeKit
(cd ../third_party/ ; ./make_lib.sh hkc );./gen_misc.sh

once the hkc lib is not changed you can just use:
./gen_misc.sh

Flashing:
../../esptool/esptool.py --baud 230400 -p /dev/cu.usbserial-AH12345H write_flash 0x00000 ../bin/eagle.flash.bin 0x14000 ../bin/eagle.irom0text.bin

Usage:
The code writes clients keys to sector 0x13000

After boot, if the device is not yet paired, an srp-key is calculated in about 25 seconds
after that the server starts and mulicastdns starts to advertize
the default pincode is 031-45-154

Enjoy,
HacK